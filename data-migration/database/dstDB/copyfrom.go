// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package dstDB

import (
	"context"
)

// iteratorForCreateQuestionsBatch implements pgx.CopyFromSource.
type iteratorForCreateQuestionsBatch struct {
	rows                 []CreateQuestionsBatchParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateQuestionsBatch) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateQuestionsBatch) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Title,
		r.rows[0].Question,
		r.rows[0].MultipleChoices,
		r.rows[0].CorrectAnswer,
		r.rows[0].Explanation,
		r.rows[0].Keywords,
		r.rows[0].Link,
	}, nil
}

func (r iteratorForCreateQuestionsBatch) Err() error {
	return nil
}

func (q *Queries) CreateQuestionsBatch(ctx context.Context, arg []CreateQuestionsBatchParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"questions"}, []string{"title", "question", "multiple_choices", "correct_answer", "explanation", "keywords", "link"}, &iteratorForCreateQuestionsBatch{rows: arg})
}
