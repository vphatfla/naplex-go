services:
  naplex-postgres-db:
    image: postgres:17-alpine
    container_name: naplex-postgres-db
    restart: on-failure
    volumes:
      - ../../migrations/:/docker-entrypoint-initdb.d
    #environment:  
     # - POSTGRES_PASSWORD:${POSTGRES_PASSWORD}
    #networks:
     # - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../../
      dockerfile: deployment/docker/backend-Dockerfile
    container_name: naplex-backend
    restart: unless-stopped
    environment:
      DOCKER_DEV: true
    ports:
      - "8080:8080"
    #networks:
     # - app_network
    depends_on:
      naplex-postgres-db:
        condition: service_healthy

volumes:
  naplex_postgres_data_dev:
    name: naplex_app_data_dev
  naplex_postgres_data_prod:
    name: naplex_app_data_prod

networks:
  app_network:
    driver: bridge
